name: gopic

services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gopic
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  service_profile:
    build:
      context: .
      dockerfile: service_profile/Dockerfile
    container_name: service_profile
    environment:
      GOPIC_DATABASE_URI: "postgres://postgres:postgres@postgres:5432/gopic"
      GOPIC_SERVER_PORT: "8080"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  service_picture:
    build:
      context: .
      dockerfile: service_picture/Dockerfile
    container_name: service_picture
    environment:
      GOPIC_DATABASE_URI: "postgres://postgres:postgres@postgres:5432/gopic"
      GOPIC_SERVER_PORT: "8081"
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
